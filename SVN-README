
+--------------------------------------------------------------------------------
| MANIALIB SVN README
+--------------------------------------------------------------------------------

1. SVN branching strategy
--------------------------------------------------------------------------------

/trunk - bleeding edge. Next major release of the code. May or may not work at 
any given time.

/branches/1.0, 1.1, etc. Stable maintenance branches of the code. Used to fix 
bugs, stabilize new releases. If a maintenance branch, it should compile (if 
applicable) and be ready for QA/shipping at any given time. If a stabilization 
branch, it should compile and be feature complete. No new features should be 
added, no refactoring, and no code cleanups. You can add a pre- prefix to 
indicate stabilization branches vs maintenance branches.

/branches/cool_feature. Used for highly experimental or destructive work that 
may or may not make it into trunk (or a maintenance branch). No guarantees about
code compiling, working, or otherwise behaving sanely. Should last the minimum 
time as possible before merging into the mainline branch.

/tags/1.0.1, 1.0.2, 1.1.3a, etc. Used for tagging a packaged & shipped release. 
NEVER EVER CHANGES. Make as many tags as you want, but they're immutable.

source: http://stackoverflow.com/questions/34975/branching-strategies

2. SVN Workflow
--------------------------------------------------------------------------------

- Checkout the whole trunk (or branch)
- Create a virtual host or alias on your Web server (eg. for trunk/examples/mvc)
- Create a symbolic link to put trunk/manialib in your working set, or specify 
the path to /manialib in the config)

Note: Windows supports symbolic links since Vista. Free and usefull shell
extension is available here (For Win XP, you can use junctions to act as symlinks): 
http://schinagl.priv.at/nt/hardlinkshellext/hardlinkshellext.html

